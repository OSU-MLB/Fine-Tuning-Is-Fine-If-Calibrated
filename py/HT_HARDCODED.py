import torch


# Class order for OfficeHome
OFFICEHOME_SOURCE_AR_CLASSES = torch.tensor(
    [2, 58, 46, 21, 19, 34, 7, 56, 39, 30, 22, 61, 33, 20, 59, 53, 51, 6, 16, 27, 24, 44, 28, 1, 37, 41, 12, 36, 40, 63,
     0, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 17, 18, 23, 25, 26, 29, 31, 32, 35, 38, 42, 43, 45, 47, 48, 49, 50, 52, 54,
     55, 57, 60, 62, 64])
OFFICEHOME_SOURCE_RW_CLASSES = torch.tensor(
    [14, 50, 42, 38, 64, 48, 13, 63, 15, 24, 55, 19, 60, 3, 16, 41, 62, 46, 2, 49, 4, 11, 25, 51, 32, 30, 31, 6, 18, 59,
     39, 17, 20, 12, 56, 23, 10, 27, 61, 1, 29, 8, 37, 28, 26, 45, 34, 52, 35, 36, 33, 57, 43, 21, 0, 9, 7, 47, 54, 44,
     40, 5, 22, 53, 58])
OFFICEHOME_N_CLASSES = 65


# Class order for ImageNet
IMAGENET_TARGET_R_CLASSES = torch.tensor(
    [341, 245, 613, 319, 9, 355, 583, 13, 327, 330, 161, 441, 71, 472, 515, 199, 23, 487, 701, 163, 22, 288, 437, 250, 338, 570, 824, 147, 365, 462, 448, 965, 717, 26, 637, 457, 178, 105, 866, 130, 476, 951, 311, 546, 84, 281, 335, 269, 172, 254, 63, 309, 347, 852, 895, 260, 97, 31, 162, 555, 301, 231, 981, 483, 94, 435, 148, 390, 100, 219, 259, 155, 145, 310, 232, 430, 947, 948, 208, 957, 195, 596, 99, 413, 820, 953, 401, 594, 361, 8, 96, 79, 113, 132, 47, 954, 1, 768, 393, 251, 933, 812, 323, 932, 308, 367, 414, 314, 988, 340, 293, 76, 447, 593, 724, 234, 763, 160, 470, 943, 334, 337, 247, 125, 907, 587, 889, 621, 629, 150, 945, 815, 90, 6, 425, 299, 407, 368, 847, 107, 388, 617, 936, 931, 11, 428, 658, 171, 558, 983, 937, 315, 833, 242, 276, 29, 779, 928, 980, 263, 787, 203, 372, 397, 292, 187, 4, 344, 883, 296, 780, 471, 289, 949, 366, 235, 776, 2, 151, 277, 774, 657, 579, 122, 267, 469, 362, 265, 39, 934, 144, 875, 463, 805, 963, 353, 967, 291, 609, 207])
IMAGENET_TARGET_S_CLASSES = torch.tensor([312, 897, 632, 147, 309, 106, 599, 711, 763, 223, 972, 595, 819, 780, 463, 598, 78, 518, 126, 948, 787, 553, 193, 415, 187, 548, 416, 536, 737, 853, 336, 105, 181, 714, 586, 764, 963, 512, 420, 929, 774, 633, 502, 123, 629, 159, 94, 551, 544, 756, 773, 915, 974, 176, 726, 646, 969, 562, 932, 11, 895, 666, 526, 438, 75, 732, 473, 840, 758, 547, 626, 943, 330, 131, 527, 754, 292, 578, 911, 768, 609, 921, 6, 778, 528, 380, 625, 236, 317, 251, 654, 628, 581, 601, 920, 760, 991, 993, 418, 241, 108, 996, 185, 219, 719, 511, 888, 110, 81, 580, 820, 291, 539, 523, 923, 224, 381, 671, 573, 797, 204, 151, 552, 792, 3, 248, 707, 664, 197, 218, 556, 76, 831, 200, 959, 36, 529, 635, 423, 850, 138, 940, 608, 879, 254, 906, 606, 670, 496, 910, 226, 467, 855, 992, 239, 967, 247, 443, 982, 785, 278, 475, 642, 31, 484, 543, 370, 687, 451, 922, 79, 570, 45, 999, 256, 859, 825, 313, 49, 736, 650, 320, 321, 211, 450, 152, 712, 678, 383, 286, 458, 925, 741, 68, 583, 735, 604, 190, 144, 29, 298, 258, 771, 334, 755, 269, 454, 136, 393, 916, 363, 968, 183, 966, 80, 500, 550, 16, 373, 743, 103, 215, 698, 871, 387, 882, 288, 343, 175, 338, 863, 857, 386, 801, 716, 649, 125, 717, 833, 405, 961, 610, 65, 725, 655, 287, 703, 872, 47, 432, 23, 58, 813, 437, 294, 585, 284, 192, 837, 540, 229, 896, 209, 349, 509, 257, 9, 225, 727, 870, 811, 264, 407, 329, 90, 508, 70, 238, 409, 384, 72, 781, 549, 148, 377, 883, 816, 689, 479, 944, 682, 139, 440, 829, 559, 328, 731, 157, 358, 15, 99, 441, 57, 927, 67, 680, 487, 360, 8, 169, 233, 524, 480, 541, 66, 74, 772, 89, 624, 88, 817, 121, 130, 406, 851, 462, 40, 722, 427, 935, 44, 314, 425, 482, 533, 636, 516, 289, 674, 615, 589, 307, 293, 43, 730, 908, 442, 876, 83, 802, 342, 97, 985, 881, 958, 656, 955, 844, 954, 436, 505, 331, 132, 46, 973, 210, 492, 685, 728, 385, 691, 498, 266, 198, 191, 325, 280, 164, 140, 356, 699, 748, 267, 100, 53, 740, 311, 259, 745, 994, 404, 391, 826, 794, 483, 160, 640, 5, 255, 48, 39, 901, 19, 350, 398, 426, 951, 460, 62, 823, 348, 989, 783, 206, 50, 913, 962, 261, 212, 414, 4, 987, 61, 981, 117, 893, 439, 832, 471, 73, 706, 998, 574, 300, 54, 322, 84, 55, 648, 858, 563, 216, 866, 353, 234, 203, 346, 575, 424, 96, 91, 102, 643, 975, 12, 362, 713, 165, 909, 246, 134, 316, 885, 864, 240, 285, 593, 983, 252, 596, 476, 953, 445, 878, 242, 95, 410, 179, 30, 411, 873, 742, 310, 894, 515, 156, 856, 877, 862, 13, 525, 846, 493, 827, 607, 303, 659, 477, 395, 613, 788, 135, 124, 812, 765, 178, 786, 262, 301, 32, 449, 459, 340, 357, 237, 376, 214, 394, 600, 397, 815, 684, 803, 42, 245, 347, 345, 769, 842, 964, 934, 17, 971, 918, 366, 616, 87, 489, 898, 949, 814, 250, 137, 970, 572, 565, 752, 638, 115, 865, 744, 644, 930, 611, 369, 355, 641, 592, 579, 665, 302, 928, 361, 434, 988, 990, 21, 571, 154, 235, 413, 519, 486, 658, 818, 753, 145, 770, 835, 92, 290, 472, 847, 20, 677, 627, 133, 952, 447, 408, 839, 662, 784, 618, 180, 995, 128, 936, 466, 683, 351, 561, 697, 457, 631, 41, 926, 194, 522, 614, 304, 672, 738, 950, 0, 335, 465, 777, 208, 688, 762, 51, 221, 978, 554, 799, 119, 485, 503, 374, 26, 163, 354, 957, 270, 588, 382, 534, 767, 274, 56, 806, 63, 173, 495, 146, 367, 751, 542, 766, 676, 941, 597, 327, 35, 868, 757, 273, 98, 577, 902, 867, 207, 344, 116, 521, 947, 917, 228, 584, 700, 800, 530, 723, 52, 127, 702, 651, 59, 177, 481, 339, 222, 686, 861, 444, 513, 260, 497, 696, 749, 724, 174, 149, 669, 205, 37, 171, 822, 341, 390, 845, 166, 775, 693, 271, 841, 914, 694, 227, 34, 630, 268, 793, 933, 332, 612, 161, 155, 182, 109, 118, 491, 653, 28, 834, 912, 804, 230, 887, 924, 701, 557, 217, 69, 249, 150, 2, 419, 71, 645, 808, 504, 33, 283, 705, 545, 809, 401, 843, 931, 446, 431, 708, 567, 692, 306, 747, 202, 469, 277, 85, 396, 622, 652, 824, 709, 977, 582, 564, 890, 141, 195, 905, 560, 1, 299, 402, 111, 520, 143, 379, 10, 244, 456, 499, 886, 265, 253, 412, 279, 400, 875, 805, 372, 18, 761, 537, 750, 452, 243, 602, 591, 637, 488, 657, 371, 546, 403, 501, 296, 796, 690, 903, 295, 576, 27, 904, 729, 170, 960, 510, 122, 621, 639, 673, 704, 880, 517, 789, 464, 663, 199, 852, 667, 433, 720, 874, 718, 282, 112, 25, 590, 836, 555, 399, 113, 474, 470, 782, 681, 120, 620, 568, 388, 566, 184, 14, 733, 860, 494, 679, 531, 421, 490, 830, 668, 201, 453, 231, 326, 790, 734, 776, 795, 319, 7, 538, 324, 359, 168, 93, 710, 569, 429, 984, 364, 759, 945, 634, 647, 828, 810, 189, 695, 186, 869, 378, 375, 276, 623, 675, 937, 821, 889, 430, 153, 392, 798, 435, 891, 478, 965, 318, 979, 907, 746, 281, 661, 196, 514, 272, 507, 417, 315, 365, 939, 82, 38, 142, 660, 308, 899, 938, 532, 77, 448, 535, 107, 172, 976, 779, 980, 919, 455, 900, 297, 461, 389, 849, 587, 232, 884, 594, 158, 352, 114, 64, 368, 956, 104, 848, 263, 838, 213, 558, 892, 739, 60, 807, 986, 946, 942, 506, 24, 619, 323, 305, 428, 791, 603, 167, 188, 86, 422, 101, 715, 468, 22, 617, 337, 129, 997, 605, 333, 162, 220, 721, 854, 275])
IMAGENET_N_CLASSES = 1000


def GET_HARDCODED_CLASSES(dataset, source, target, n_visible_classes, n_invisible_classes, visible_classes='hardcoded'):
    # Get all classes and number of classes
    if dataset == 'OfficeHome':
        if source == 'Ar':
            all_classes = OFFICEHOME_SOURCE_AR_CLASSES
        elif source == 'Rw':
            all_classes = OFFICEHOME_SOURCE_RW_CLASSES
        else:
            raise NotImplementedError()
        num_classes = OFFICEHOME_N_CLASSES
    elif dataset == 'ImageNet':
        if target == 'R':
            all_classes = IMAGENET_TARGET_R_CLASSES
        elif target == 'S':
            all_classes = IMAGENET_TARGET_S_CLASSES
        num_classes = IMAGENET_N_CLASSES
    else:
        raise NotImplementedError()
    
    assert n_visible_classes + n_invisible_classes <= num_classes, f"n_visible_classes + n_invisible_classes should be less than or equal to num_classes ({num_classes}). "

    # Get hardcoded visible classes
    visible_classes_pool = all_classes[:num_classes - n_invisible_classes]
    if visible_classes == 'random':
        shuffle_idx = torch.randperm(visible_classes_pool.size(0))
        visible_classes_pool = visible_classes_pool[shuffle_idx]
    visible_classes = visible_classes_pool[:n_visible_classes]
    invisible_classes = all_classes[-n_invisible_classes:]

    return num_classes, all_classes, visible_classes, invisible_classes
